@use "sass:math";

$grid-columns: 12;
$grid-gaps: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
    "4": 40px,
    "5": 50px
);
$justify-values: flex-start, flex-end, center, space-between, space-around;

// BASE LAYOUT CLASSES
@mixin container() {
    width:100%;
    padding-left: $grid-gutter * .5;
    padding-right: $grid-gutter * .5;
    margin-left: auto;
    margin-right: auto;
}

.container, .container-fluid{
    @include container();
}

@each $breakpoint, $max-width in $breakpoints {
    .container-#{$breakpoint}{ @extend .container-fluid; }
}

.row{
    display: flex;
    flex-wrap: wrap;

    margin-left: -.5 * $grid-gutter;
    margin-right: -.5 * $grid-gutter;

    > * {
        box-sizing: border-box;
        flex-shrink: 0;
        width: 100%;
        max-width: 100%;
        padding-right: calc($grid-gutter * .5);
        padding-left: calc($grid-gutter * .5);
    }
}


// JUSTIFY CLASSES
@each $val in $justify-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}


// COLUMN CLASSES
@mixin col($size: false) {
    @if $size {
        flex: 0 0 auto;
        width: percentage(math.div($size, $grid-columns))
    } @else {
        flex: 1 1 0;
        max-width:100%;
    }
}

.col {
    @include col();
}

@for $i from 1 through $grid-columns {
    .col-#{$i} {
        @include col($i);
    }
}

@each $key, $val in $breakpoints{
    @include breakpoint($val) {
        @for $i from 1 through $grid-columns {
            .col-#{$key}-#{$i} {
                @include col($i);
            }
        }
    }
}